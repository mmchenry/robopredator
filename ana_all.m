function ana_all(root_path)
% Performs analyses on the data in 'flow_along_body.mat', which is
% generated by ana_body_flow.m



%% Parameters

% Create boxplots of each parameter that could serve as a cue
show_boxplots = 1;

% Plots 3D volumes of flow field and responses
show_3D = 1;

% Modeled threshold of shearing for a response
sh_thresh = .5;

% Modeled threshold of speed
spd_thresh = .1;

% Relative position of COM along length of the body (this is Matt's guess)
COM_pos = .25;

% Alpha transparency for the isosurface plots
alpha_val = .6;


%% Paths

if nargin < 1
    root_path = uigetdir(pwd,'Select root directory (holds "cfd" & "behavior")');
end

% Paths to CFD data arranged in regular grid
cfd_path{1}  = [root_path filesep 'cfd' filesep 'flow_02cmps_reggrid.mat'];
cfd_path{2}  = [root_path filesep 'cfd' filesep 'flow_11cmps_reggrid.mat'];
cfd_path{3}  = [root_path filesep 'cfd' filesep 'flow_20cmps_reggrid.mat'];


%% Load data & define variables

% Load flow data ('f')
load([root_path filesep 'behavior' filesep 'flow_along_body.mat'])

% Load behavior data ('b')
load([root_path filesep 'behavior' filesep 'Transformed_Prey_Coords.mat'])

% Number of sequences
num_seq = length(b.preyx(:,1));

% Values of speeds
spds = [2 11 20];

% Indices for each speed of sequences in the dark, with lateral line intact
i2 = (b.speed(1:num_seq)==2) & (b.LL(1:num_seq)==1) ...
     & ~isnan(b.preyx(:,1)) & (b.lit(1:num_seq)==0);

i11 = (b.speed(1:num_seq)==11) & (b.LL(1:num_seq)==1) ...
     & ~isnan(b.preyx(:,1)) & (b.lit(1:num_seq)==0);
 
i20 = (b.speed(1:num_seq)==20) & (b.LL(1:num_seq)==1) ...
     & ~isnan(b.preyx(:,1)) & (b.lit(1:num_seq)==0);

% Create groups by speed
groups = [b.speed(i2); b.speed(i11); b.speed(i20)];


%% Response distance boxplots


if show_boxplots
    
    % Distance of each of the three body points
    dist1 = sqrt( b.preyx(:,1).^2 + b.preyy(:,1).^2 + b.preyz(:,1).^2 );
    dist2 = sqrt( b.preyx(:,2).^2 + b.preyy(:,2).^2 + b.preyz(:,2).^2 );
    dist3 = sqrt( b.preyx(:,3).^2 + b.preyy(:,3).^2 + b.preyz(:,3).^2 );
    
    % Use minimum distance as the response distance
    resp_dist = min([dist1 dist2 dist3],[],2);
    
    % Max speed along body for each speed
    max_bod_spd =  [max(f.spd(i2,:),[],2); ...
        max(f.spd(i11,:),[],2); ...
        max(f.spd(i20,:),[],2)];
    
    % Max velocity gradient along body for each speed
    max_velgrad =  [max(abs(f.velgrad(i2,:)),[],2); ...
        max(abs(f.velgrad(i11,:)),[],2); ...
        max(abs(f.velgrad(i20,:)),[],2)];
    
    % Max shearing along body for each speed
    max_shear   =  [max(f.shrdef(i2,:),[],2); ...
        max(f.shrdef(i11,:),[],2); ...
        max(f.shrdef(i20,:),[],2)];
    
    % Boxplots
    figure;
    
    subplot(2,2,1)
    boxplot(max_bod_spd, groups)
    xlabel('speed (cm/s)')
    ylabel('max speed along body')
    
    subplot(2,2,2)
    boxplot(max_velgrad, groups)
    xlabel('speed (cm/s)')
    ylabel('max vel gradient along body')
    
    subplot(2,2,3)
    boxplot(max_shear, groups)
    xlabel('speed (cm/s)')
    ylabel('max shear deformation along body')  
    
    clear dist1 dist2 dist3 resp_dist max_bod_spd max_velgrad max_shear
end


%% Plot spatial distibution of responders

if show_3D  
    
    for i = 1:3
        
        % New Figure window
        figure
        
        % Load CFD data in 'cR' strcuture
        load(cfd_path{i})
        
        % 3D plot of speed and resposes -----------------------------------
        
        % Plot of position at response
        subplot(1,2,1)
        plot_prey_pos(f,i2)
        hold on
        title(['Speed (' num2str(spds(i)) ' cm/s)'])
        xlims = xlim;
        ylims = ylim;
        zlims = zlim;
        
        hold on
        
        % Isosurface
        p = patch(isosurface(cR.x,cR.y,cR.z,smooth3(cR.spd),spd_thresh));
        isonormals(cR.x,cR.y,cR.z,cR.spd,p)
        set(p,'FaceColor','red','EdgeColor','none');
        daspect([1,1,1])
        %view(3);
        axis tight
        camlight
        lighting gouraud
        alpha(p,alpha_val)
        
        hold off
        
        % 3D plot of shearing and resposes --------------------------------
        
        % Plot of position at response
        subplot(1,2,2)
        plot_prey_pos(f,i2)
        hold on
        title(['Shear deformation (' num2str(spds(i)) ' cm/s)'])
        xlims = xlim;
        ylims = ylim;
        zlims = zlim; 
        
        hold on
        
        % Isosurface
        p = patch(isosurface(cR.x,cR.y,cR.z,smooth3(cR.sh_def),sh_thresh));
        isonormals(cR.x,cR.y,cR.z,cR.sh_def,p)
        set(p,'FaceColor','red','EdgeColor','none');
        daspect([1,1,1])
        %view(3);
        axis tight
        camlight
        lighting gouraud
        alpha(p,alpha_val)
        
        hold off
        
    end   
    
end






function plot_prey_pos(f,spd_index)


idx = find(spd_index);
for i = 1:length(idx)
    plot3([f.xbod(idx(i),1) f.xbod(idx(i),end)],...
          [f.ybod(idx(i),1) f.ybod(idx(i),end)],...
          [f.zbod(idx(i),1) f.zbod(idx(i),end)],'-k',...
           f.xbod(idx(i),1),f.ybod(idx(i),1),f.zbod(idx(i),1),'ok');
    hold on
end
axis equal
xlims = xlim;

plot3([xlims(1) 0],[0 0],[0 0],'r-',0,0,0,'or')

grid on
hold off

xlabel('x')
ylabel('y')
zlabel('z')

view([0 90])

